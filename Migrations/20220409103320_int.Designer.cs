// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sammishop.Data;

namespace Sammishop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220409103320_int")]
    partial class @int
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Sammishop.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(1622), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(1626), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductId = 1,
                            Quantity = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(1639), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(1640), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductId = 2,
                            Quantity = 0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(5292), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(5295), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Xanh"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(5475), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(5477), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đỏ"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<bool>("Delected");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.Property<string>("content");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(9451), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Delected = true,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(9455), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductId = 1,
                            content = "Nội dung bình luận 1 cho iphone"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(9474), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Delected = false,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(9476), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductId = 1,
                            content = "Nội dung bình luận 2 cho iphone"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<bool>("ApplyAll");

                    b.Property<string>("Code");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateTimeFinish");

                    b.Property<DateTime>("DateTimeStart");

                    b.Property<string>("Descriptions");

                    b.Property<int>("DiscountCategoryId");

                    b.Property<decimal>("DiscountMoney");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("Quantity");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DiscountCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            ApplyAll = false,
                            Code = "MA10",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(9123), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            DateTimeFinish = new DateTime(2019, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeStart = new DateTime(2019, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descriptions = "Giảm 10.000 cho điện thoại",
                            DiscountCategoryId = 2,
                            DiscountMoney = 10000m,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(9129), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Quantity = 1000,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            ApplyAll = false,
                            Code = "MA20",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(9186), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            DateTimeFinish = new DateTime(2019, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeStart = new DateTime(2019, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descriptions = "Giảm 20.000 cho tất cả sản phẩm",
                            DiscountCategoryId = 2,
                            DiscountMoney = 20000m,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(9187), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Quantity = 1000,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Sammishop.Models.DiscountCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Decriptions");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DiscountCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3801), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Decriptions = "Khuyến mại theo số tiền",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3805), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Voucher"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3819), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Decriptions = "Khuyến mại theo %",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3820), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Counpon"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.DiscountProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("DiscountId");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ProductId");

                    b.ToTable("DiscountProduct");
                });

            modelBuilder.Entity("Sammishop.Models.DiscountProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("DiscountId");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("DiscountProductCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 475, DateTimeKind.Unspecified).AddTicks(337), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            DiscountId = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 475, DateTimeKind.Unspecified).AddTicks(342), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 475, DateTimeKind.Unspecified).AddTicks(356), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            DiscountId = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 475, DateTimeKind.Unspecified).AddTicks(357), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductCategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 475, DateTimeKind.Unspecified).AddTicks(359), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            DiscountId = 2,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 475, DateTimeKind.Unspecified).AddTicks(360), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductCategoryId = 1
                        });
                });

            modelBuilder.Entity("Sammishop.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Extention");

                    b.Property<string>("Hash");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Module");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<int>("ProductId");

                    b.Property<long>("Size");

                    b.Property<DateTime>("UploadedAt");

                    b.Property<string>("UploadedBy");

                    b.Property<string>("Url");

                    b.Property<bool>("thumbnail");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("File");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(736), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Extention = ".png",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(741), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "iphonex",
                            Path = "images\\smartphone\\iphonex.png",
                            ProductId = 1,
                            Size = 0L,
                            UploadedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            thumbnail = true
                        });
                });

            modelBuilder.Entity("Sammishop.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("Sammishop.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("DeliveryAddress");

                    b.Property<decimal>("DiscountMoney");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Note");

                    b.Property<int>("OrderStatusId");

                    b.Property<int?>("PaymentMethodId");

                    b.Property<string>("Phone");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<string>("Receiver");

                    b.Property<decimal>("SalePrice");

                    b.Property<decimal>("Total");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Sammishop.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("OrderStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(2312), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(2316), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đang chờ"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(2328), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(2329), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đang giao hàng"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(2331), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(2331), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đã giao thành công"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(2333), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(2333), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đã hủy"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethod");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Code = "COD",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3057), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3061), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Thanh toán tiền mặt khi nhận hàng"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Code = "Visa - Master - JCB",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3077), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3077), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Thanh toán bằng thẻ quốc tế Visa, Master, JCB"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Code = "Visa - Master - JCB",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3079), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3080), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Thẻ ATM nội địa/Internet Banking (Miễn phí thanh toán)"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Code = "MoMo",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3081), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 474, DateTimeKind.Unspecified).AddTicks(3082), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Thanh toán bằng MoMo"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<int>("ColorId");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Decriptions");

                    b.Property<int>("Inventory");

                    b.Property<bool>("IsNew");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<decimal>("OriginalPrice");

                    b.Property<int>("ProductCategoryId");

                    b.Property<decimal>("SalePrice");

                    b.Property<string>("Specifications");

                    b.Property<int>("StatusId");

                    b.Property<int>("SupplierId");

                    b.Property<int>("VendorId");

                    b.Property<int>("View");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VendorId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            ColorId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(8408), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Decriptions = "Cuối cùng iPhone X cũng đã ra mắt trong sự kiện diễn ra rạng sáng nay (13/9) theo giờ Việt Nam. </br>Đây là sản phẩm được Apple tung ra để kỷ niệm 10 năm iPhone.",
                            Inventory = 1000,
                            IsNew = true,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(8412), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "IPhone X",
                            OriginalPrice = 20000000m,
                            ProductCategoryId = 1,
                            SalePrice = 25000000m,
                            Specifications = "Nhà sản xuất:Apple </br>Hệ điều hành: iOS 11 </br>Kích thước:	143,6 x 70,9 x 7,7 mm </br>Trọng lượng: 174g </br>Ngày giới thiệu:	13 / 09 / 2017",
                            StatusId = 1,
                            SupplierId = 1,
                            VendorId = 1,
                            View = 500
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            ColorId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(8665), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Decriptions = "Cuối cùng iPhone X cũng đã ra mắt trong sự kiện diễn ra rạng sáng nay (13/9) theo giờ Việt Nam. </br>Đây là sản phẩm được Apple tung ra để kỷ niệm 10 năm iPhone.",
                            Inventory = 1000,
                            IsNew = true,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(8667), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Samsung X",
                            OriginalPrice = 20000000m,
                            ProductCategoryId = 1,
                            SalePrice = 25000000m,
                            Specifications = "Nhà sản xuất:Apple </br>Hệ điều hành: iOS 11 </br>Kích thước:	143,6 x 70,9 x 7,7 mm </br>Trọng lượng: 174g </br>Ngày giới thiệu:	13 / 09 / 2017",
                            StatusId = 1,
                            SupplierId = 1,
                            VendorId = 1,
                            View = 500
                        });
                });

            modelBuilder.Entity("Sammishop.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int?>("SupplierId");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(2248), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(2253), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Điện thoại"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(2265), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(2267), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Ipad"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(2268), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(2269), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Laptop"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Level");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(3658), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Level = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(3662), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(3846), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Level = 2,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(3848), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Custommer"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(2877), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(2882), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Xuất bản"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(2893), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(2894), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Chưa xuất bản"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Info");

                    b.Property<string>("Logo");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 470, DateTimeKind.Unspecified).AddTicks(5436), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin apple",
                            Logo = "Logo Apple",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(6823), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(7393), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin samsung",
                            Logo = "Logo Samsung",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(7403), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(7410), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin xiaomi",
                            Logo = "Logo Xiaomi",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(7412), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Xiaomi"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(7413), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin Huwei",
                            Logo = "Logo Huwei",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(7414), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Huwei"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(7416), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin Oppo",
                            Logo = "Logo Oppo",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(7418), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Oppo"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(7419), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin Nokia",
                            Logo = "Logo Nokia",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 472, DateTimeKind.Unspecified).AddTicks(7420), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Nokia"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<int>("RoleId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Ha Noi",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(4690), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Email = "thuhoai@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(4694), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đào Thu Hoài",
                            Password = "123456",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Ha Noi",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(4713), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Email = "customer@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(4714), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đào Thu Hoài",
                            Password = "123456",
                            RoleId = 2,
                            Username = "customer"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Địa chỉ Hà Nội",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(1420), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Email = "hoangha@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(1429), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Hoàng Hà Mobile",
                            Phone = "0987654321"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Địa chỉ Cầu giấy",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(1454), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Email = "Cellphones@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 9, 17, 33, 19, 473, DateTimeKind.Unspecified).AddTicks(1455), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "CellPhone S",
                            Phone = "0123456789"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Cart", b =>
                {
                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Sammishop.Models.Comment", b =>
                {
                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammishop.Models.Discount", b =>
                {
                    b.HasOne("Sammishop.Models.DiscountCategory", "DiscountCategory")
                        .WithMany()
                        .HasForeignKey("DiscountCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Sammishop.Models.DiscountProduct", b =>
                {
                    b.HasOne("Sammishop.Models.Discount", "Discount")
                        .WithMany("DiscountProducts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany("DiscountProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammishop.Models.DiscountProductCategory", b =>
                {
                    b.HasOne("Sammishop.Models.Discount", "Discount")
                        .WithMany("DiscountProductCategories")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.ProductCategory", "ProductCategory")
                        .WithMany("DiscountProductCategories")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammishop.Models.File", b =>
                {
                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany("Files")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammishop.Models.History", b =>
                {
                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Sammishop.Models.Order", b =>
                {
                    b.HasOne("Sammishop.Models.OrderStatus", "orderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Sammishop.Models.Product", b =>
                {
                    b.HasOne("Sammishop.Models.Color", "Color")
                        .WithMany("Products")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.Status", "Status")
                        .WithMany("Products")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.Vendor", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammishop.Models.ProductCategory", b =>
                {
                    b.HasOne("Sammishop.Models.Supplier")
                        .WithMany("ProductCategories")
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("Sammishop.Models.User", b =>
                {
                    b.HasOne("Sammishop.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
