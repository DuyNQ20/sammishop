// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sammishop.Data;

namespace Sammishop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220423144403_add-user-nhanvien")]
    partial class addusernhanvien
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Sammishop.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(1673), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(1684), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductId = 1,
                            Quantity = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(1717), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(1720), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductId = 2,
                            Quantity = 0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 635, DateTimeKind.Unspecified).AddTicks(4988), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 635, DateTimeKind.Unspecified).AddTicks(4996), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Xanh"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 635, DateTimeKind.Unspecified).AddTicks(5656), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 635, DateTimeKind.Unspecified).AddTicks(5662), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đỏ"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<bool>("Delected");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.Property<string>("content");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 636, DateTimeKind.Unspecified).AddTicks(5652), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Delected = true,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 636, DateTimeKind.Unspecified).AddTicks(5663), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductId = 1,
                            content = "Nội dung bình luận 1 cho iphone"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 636, DateTimeKind.Unspecified).AddTicks(5711), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Delected = false,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 636, DateTimeKind.Unspecified).AddTicks(5713), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductId = 1,
                            content = "Nội dung bình luận 2 cho iphone"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<bool>("ApplyAll");

                    b.Property<string>("Code");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("DateTimeFinish");

                    b.Property<DateTime>("DateTimeStart");

                    b.Property<string>("Descriptions");

                    b.Property<int>("DiscountCategoryId");

                    b.Property<decimal>("DiscountMoney");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("Quantity");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DiscountCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            ApplyAll = false,
                            Code = "MA10",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 642, DateTimeKind.Unspecified).AddTicks(3890), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            DateTimeFinish = new DateTime(2022, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeStart = new DateTime(2022, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descriptions = "Giảm 10.000 cho skin care",
                            DiscountCategoryId = 2,
                            DiscountMoney = 10000m,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 642, DateTimeKind.Unspecified).AddTicks(3907), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Quantity = 1000,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            ApplyAll = false,
                            Code = "MA20",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 642, DateTimeKind.Unspecified).AddTicks(4006), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            DateTimeFinish = new DateTime(2022, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTimeStart = new DateTime(2022, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descriptions = "Giảm 20.000 cho tất cả sản phẩm",
                            DiscountCategoryId = 2,
                            DiscountMoney = 20000m,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 642, DateTimeKind.Unspecified).AddTicks(4008), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Quantity = 1000,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Sammishop.Models.DiscountCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Decriptions");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("DiscountCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(5762), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Decriptions = "Khuyến mại theo số tiền",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(5769), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Voucher"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(5799), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Decriptions = "Khuyến mại theo %",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(5801), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Counpon"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.DiscountProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("DiscountId");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ProductId");

                    b.ToTable("DiscountProduct");
                });

            modelBuilder.Entity("Sammishop.Models.DiscountProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("DiscountId");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("DiscountProductCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 642, DateTimeKind.Unspecified).AddTicks(5971), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            DiscountId = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 642, DateTimeKind.Unspecified).AddTicks(5980), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 642, DateTimeKind.Unspecified).AddTicks(6006), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            DiscountId = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 642, DateTimeKind.Unspecified).AddTicks(6007), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductCategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 642, DateTimeKind.Unspecified).AddTicks(6009), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            DiscountId = 2,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 642, DateTimeKind.Unspecified).AddTicks(6011), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            ProductCategoryId = 1
                        });
                });

            modelBuilder.Entity("Sammishop.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Extention");

                    b.Property<string>("Hash");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Module");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<int>("ProductId");

                    b.Property<long>("Size");

                    b.Property<DateTime>("UploadedAt");

                    b.Property<string>("UploadedBy");

                    b.Property<string>("Url");

                    b.Property<bool>("thumbnail");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("File");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 636, DateTimeKind.Unspecified).AddTicks(9269), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Extention = ".png",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 636, DateTimeKind.Unspecified).AddTicks(9280), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "iphonex",
                            Path = "images\\smartphone\\iphonex.png",
                            ProductId = 1,
                            Size = 0L,
                            UploadedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            thumbnail = true
                        });
                });

            modelBuilder.Entity("Sammishop.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("Sammishop.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("DeliveryAddress");

                    b.Property<decimal>("DiscountMoney");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Note");

                    b.Property<int>("OrderStatusId");

                    b.Property<int?>("PaymentMethodId");

                    b.Property<string>("Phone");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<string>("Receiver");

                    b.Property<decimal>("SalePrice");

                    b.Property<decimal>("Total");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Sammishop.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("OrderStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(2953), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(2959), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đang chờ"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(2980), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(2981), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đang giao hàng"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(2986), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(2988), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đã giao thành công"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(2992), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(2993), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đã hủy"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Code");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethod");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Code = "COD",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(4397), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(4406), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Thanh toán tiền mặt khi nhận hàng"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Code = "Visa - Master - JCB",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(4433), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(4435), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Thanh toán bằng thẻ quốc tế Visa, Master, JCB"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Code = "Visa - Master - JCB",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(4438), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(4440), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Thẻ ATM nội địa/Internet Banking (Miễn phí thanh toán)"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            Code = "MoMo",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(4442), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 637, DateTimeKind.Unspecified).AddTicks(4444), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Thanh toán bằng MoMo"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<int>("ColorId");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Decriptions");

                    b.Property<int>("Inventory");

                    b.Property<bool>("IsNew");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<decimal>("OriginalPrice");

                    b.Property<int>("ProductCategoryId");

                    b.Property<decimal>("SalePrice");

                    b.Property<string>("Specifications");

                    b.Property<int>("StatusId");

                    b.Property<int>("SupplierId");

                    b.Property<int>("VendorId");

                    b.Property<int>("View");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VendorId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            ColorId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 636, DateTimeKind.Unspecified).AddTicks(2346), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Decriptions = "",
                            Inventory = 1000,
                            IsNew = true,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 636, DateTimeKind.Unspecified).AddTicks(2367), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "NATURE REPUBLIC TINH CHẤT GREEN DERMA MILD CICA SERUM 50ML (IP04)",
                            OriginalPrice = 410000m,
                            ProductCategoryId = 1,
                            SalePrice = 287000m,
                            Specifications = "",
                            StatusId = 1,
                            SupplierId = 1,
                            VendorId = 1,
                            View = 500
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            ColorId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 636, DateTimeKind.Unspecified).AddTicks(2515), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Decriptions = "",
                            Inventory = 1000,
                            IsNew = true,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 636, DateTimeKind.Unspecified).AddTicks(2519), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "NATURE REPUBLIC TINH CHẤT GREEN DERMA MILD CICA SERUM 50ML (IP04)",
                            OriginalPrice = 410000m,
                            ProductCategoryId = 1,
                            SalePrice = 287000m,
                            Specifications = "",
                            StatusId = 1,
                            SupplierId = 1,
                            VendorId = 1,
                            View = 500
                        });
                });

            modelBuilder.Entity("Sammishop.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int?>("SupplierId");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 633, DateTimeKind.Unspecified).AddTicks(8247), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 633, DateTimeKind.Unspecified).AddTicks(8260), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Make Up"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 633, DateTimeKind.Unspecified).AddTicks(8285), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 633, DateTimeKind.Unspecified).AddTicks(8287), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Skin Care"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 633, DateTimeKind.Unspecified).AddTicks(8289), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 633, DateTimeKind.Unspecified).AddTicks(8290), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Chăm sóc tóc"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Level");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 634, DateTimeKind.Unspecified).AddTicks(7341), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Level = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 634, DateTimeKind.Unspecified).AddTicks(7367), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 634, DateTimeKind.Unspecified).AddTicks(9047), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Level = 2,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 634, DateTimeKind.Unspecified).AddTicks(9056), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Custommer"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 634, DateTimeKind.Unspecified).AddTicks(9099), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Level = 2,
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 634, DateTimeKind.Unspecified).AddTicks(9101), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Employee"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 634, DateTimeKind.Unspecified).AddTicks(1057), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 634, DateTimeKind.Unspecified).AddTicks(1076), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Xuất bản"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 634, DateTimeKind.Unspecified).AddTicks(1102), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 634, DateTimeKind.Unspecified).AddTicks(1104), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Chưa xuất bản"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Info");

                    b.Property<string>("Logo");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 628, DateTimeKind.Unspecified).AddTicks(8072), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin Loreal",
                            Logo = "Logo Loreal",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(4843), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Loreal"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(6127), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin Maybelline",
                            Logo = "Logo Maybelline",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(6149), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Maybelline"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(6164), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin Vichy",
                            Logo = "Logo Vichy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(6165), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Vichy"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(6167), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin  Innisfree",
                            Logo = "Logo  Innisfree",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(6168), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = " Innisfree"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(6170), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin Some By Mi",
                            Logo = "Logo Some By Mi",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(6171), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Some By Mi"
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(6173), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Info = "Thông tin Black Rouge",
                            Logo = "Logo Black Rouge",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 632, DateTimeKind.Unspecified).AddTicks(6174), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Black Rouge"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<int>("RoleId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Ha Noi",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 635, DateTimeKind.Unspecified).AddTicks(1978), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Email = "thuhoai@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 635, DateTimeKind.Unspecified).AddTicks(1990), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đào Thu Hoài",
                            Password = "123456",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Ha Noi",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 635, DateTimeKind.Unspecified).AddTicks(2063), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Email = "customer@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 635, DateTimeKind.Unspecified).AddTicks(2067), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Đào Thu Hoài",
                            Password = "123456",
                            RoleId = 2,
                            Username = "customer"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            Address = "Ha Noi",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 635, DateTimeKind.Unspecified).AddTicks(2071), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Email = "nhanvien@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 635, DateTimeKind.Unspecified).AddTicks(2072), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Nguyễn Quang Duy",
                            Password = "123456",
                            RoleId = 3,
                            Username = "nhanvien"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Địa chỉ Hà Nội",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 633, DateTimeKind.Unspecified).AddTicks(6079), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Email = "Loreal@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 633, DateTimeKind.Unspecified).AddTicks(6107), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Loreal",
                            Phone = "0987654321"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Địa chỉ Cầu giấy",
                            CreatedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 633, DateTimeKind.Unspecified).AddTicks(6165), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Đào Thu Hoài",
                            Email = "Maybelline@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2022, 4, 23, 21, 44, 2, 633, DateTimeKind.Unspecified).AddTicks(6167), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Đào Thu Hoài",
                            Name = "Maybelline",
                            Phone = "0123456789"
                        });
                });

            modelBuilder.Entity("Sammishop.Models.Cart", b =>
                {
                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Sammishop.Models.Comment", b =>
                {
                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammishop.Models.Discount", b =>
                {
                    b.HasOne("Sammishop.Models.DiscountCategory", "DiscountCategory")
                        .WithMany()
                        .HasForeignKey("DiscountCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Sammishop.Models.DiscountProduct", b =>
                {
                    b.HasOne("Sammishop.Models.Discount", "Discount")
                        .WithMany("DiscountProducts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany("DiscountProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammishop.Models.DiscountProductCategory", b =>
                {
                    b.HasOne("Sammishop.Models.Discount", "Discount")
                        .WithMany("DiscountProductCategories")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.ProductCategory", "ProductCategory")
                        .WithMany("DiscountProductCategories")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammishop.Models.File", b =>
                {
                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany("Files")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammishop.Models.History", b =>
                {
                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Sammishop.Models.Order", b =>
                {
                    b.HasOne("Sammishop.Models.OrderStatus", "orderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("Sammishop.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Sammishop.Models.Product", b =>
                {
                    b.HasOne("Sammishop.Models.Color", "Color")
                        .WithMany("Products")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.Status", "Status")
                        .WithMany("Products")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sammishop.Models.Vendor", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sammishop.Models.ProductCategory", b =>
                {
                    b.HasOne("Sammishop.Models.Supplier")
                        .WithMany("ProductCategories")
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("Sammishop.Models.User", b =>
                {
                    b.HasOne("Sammishop.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
