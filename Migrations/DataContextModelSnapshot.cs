// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartPhone.Data;

namespace SmartPhone.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmartPhone.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Cart");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 850, DateTimeKind.Unspecified).AddTicks(9987), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 851, DateTimeKind.Unspecified), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            ProductId = 1,
                            Quantity = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 851, DateTimeKind.Unspecified).AddTicks(427), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 851, DateTimeKind.Unspecified).AddTicks(436), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            ProductId = 2,
                            Quantity = 0,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 845, DateTimeKind.Unspecified).AddTicks(5381), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 845, DateTimeKind.Unspecified).AddTicks(5394), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Xanh"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 845, DateTimeKind.Unspecified).AddTicks(5437), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 845, DateTimeKind.Unspecified).AddTicks(5446), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Đỏ"
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<bool>("Delected");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<int>("ProductId");

                    b.Property<string>("content");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 849, DateTimeKind.Unspecified).AddTicks(7731), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Delected = true,
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 849, DateTimeKind.Unspecified).AddTicks(7748), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            ProductId = 1,
                            content = "Nội dung bình luận 1 cho iphone"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 849, DateTimeKind.Unspecified).AddTicks(7808), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Delected = false,
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 849, DateTimeKind.Unspecified).AddTicks(7816), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            ProductId = 1,
                            content = "Nội dung bình luận 2 cho iphone"
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Extention");

                    b.Property<string>("Hash");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Module");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<int>("ProductId");

                    b.Property<long>("Size");

                    b.Property<DateTime>("UploadedAt");

                    b.Property<string>("UploadedBy");

                    b.Property<string>("Url");

                    b.Property<bool>("thumbnail");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("File");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 850, DateTimeKind.Unspecified).AddTicks(5723), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Extention = ".png",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 850, DateTimeKind.Unspecified).AddTicks(5740), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "iphonex",
                            Path = "images\\smartphone\\iphonex.png",
                            ProductId = 1,
                            Size = 0L,
                            UploadedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            thumbnail = true
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<int>("ColorId");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Decriptions");

                    b.Property<int>("Inventory");

                    b.Property<bool>("IsNew");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<decimal>("OriginalPrice");

                    b.Property<int>("ProductCategoryId");

                    b.Property<decimal>("SalePrice");

                    b.Property<string>("Specifications");

                    b.Property<int>("StatusId");

                    b.Property<int>("SupplierId");

                    b.Property<int>("VendorId");

                    b.Property<int>("View");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VendorId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            ColorId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 849, DateTimeKind.Unspecified).AddTicks(897), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Decriptions = "Cuối cùng iPhone X cũng đã ra mắt trong sự kiện diễn ra rạng sáng nay (13/9) theo giờ Việt Nam. </br>Đây là sản phẩm được Apple tung ra để kỷ niệm 10 năm iPhone.",
                            Inventory = 1000,
                            IsNew = true,
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 849, DateTimeKind.Unspecified).AddTicks(935), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "IPhone X",
                            OriginalPrice = 20000000m,
                            ProductCategoryId = 1,
                            SalePrice = 25000000m,
                            Specifications = "Nhà sản xuất:Apple </br>Hệ điều hành: iOS 11 </br>Kích thước:	143,6 x 70,9 x 7,7 mm </br>Trọng lượng: 174g </br>Ngày giới thiệu:	13 / 09 / 2017",
                            StatusId = 1,
                            SupplierId = 1,
                            VendorId = 1,
                            View = 500
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            ColorId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 849, DateTimeKind.Unspecified).AddTicks(1897), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Decriptions = "Cuối cùng iPhone X cũng đã ra mắt trong sự kiện diễn ra rạng sáng nay (13/9) theo giờ Việt Nam. </br>Đây là sản phẩm được Apple tung ra để kỷ niệm 10 năm iPhone.",
                            Inventory = 1000,
                            IsNew = true,
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 849, DateTimeKind.Unspecified).AddTicks(1906), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Samsung X",
                            OriginalPrice = 20000000m,
                            ProductCategoryId = 1,
                            SalePrice = 25000000m,
                            Specifications = "Nhà sản xuất:Apple </br>Hệ điều hành: iOS 11 </br>Kích thước:	143,6 x 70,9 x 7,7 mm </br>Trọng lượng: 174g </br>Ngày giới thiệu:	13 / 09 / 2017",
                            StatusId = 1,
                            SupplierId = 1,
                            VendorId = 1,
                            View = 500
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<int?>("SupplierId");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 843, DateTimeKind.Unspecified).AddTicks(8840), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 843, DateTimeKind.Unspecified).AddTicks(8853), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Điện thoại"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 843, DateTimeKind.Unspecified).AddTicks(9007), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 843, DateTimeKind.Unspecified).AddTicks(9016), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Ipad"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 843, DateTimeKind.Unspecified).AddTicks(9024), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 843, DateTimeKind.Unspecified).AddTicks(9033), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Laptop"
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Level");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 844, DateTimeKind.Unspecified).AddTicks(6251), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Level = 1,
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 844, DateTimeKind.Unspecified).AddTicks(6264), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 844, DateTimeKind.Unspecified).AddTicks(6687), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Level = 2,
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 844, DateTimeKind.Unspecified).AddTicks(6696), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Custommer"
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 844, DateTimeKind.Unspecified).AddTicks(1996), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 844, DateTimeKind.Unspecified).AddTicks(2005), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Xuất bản"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 844, DateTimeKind.Unspecified).AddTicks(2043), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 844, DateTimeKind.Unspecified).AddTicks(2047), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Chưa xuất bản"
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Info");

                    b.Property<string>("Logo");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Supplier");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 833, DateTimeKind.Unspecified).AddTicks(6182), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Info = "Thông tin apple",
                            Logo = "Logo Apple",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 837, DateTimeKind.Unspecified).AddTicks(8210), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 838, DateTimeKind.Unspecified).AddTicks(716), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Info = "Thông tin samsung",
                            Logo = "Logo Samsung",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 838, DateTimeKind.Unspecified).AddTicks(737), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Samsung"
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<int>("RoleId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Ha Noi",
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 845, DateTimeKind.Unspecified).AddTicks(1858), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Email = "quangduy@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 845, DateTimeKind.Unspecified).AddTicks(1870), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Nguyen Quang Duy",
                            Password = "123456",
                            RoleId = 1,
                            Username = "quangduy"
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<DateTimeOffset>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Email");

                    b.Property<DateTimeOffset>("ModifiedAt");

                    b.Property<string>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Vendor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Địa chỉ Hà Nội",
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 843, DateTimeKind.Unspecified).AddTicks(5594), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Email = "hoangha@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 843, DateTimeKind.Unspecified).AddTicks(5624), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "Hoàng Hà Mobile",
                            Phone = "0987654321"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Địa chỉ Cầu giấy",
                            CreatedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 843, DateTimeKind.Unspecified).AddTicks(5718), new TimeSpan(0, 7, 0, 0, 0)),
                            CreatedBy = "Quang Duy",
                            Email = "Cellphones@gmail.com",
                            ModifiedAt = new DateTimeOffset(new DateTime(2019, 3, 10, 22, 26, 39, 843, DateTimeKind.Unspecified).AddTicks(5727), new TimeSpan(0, 7, 0, 0, 0)),
                            ModifiedBy = "Quang Duy",
                            Name = "CellPhone S",
                            Phone = "0123456789"
                        });
                });

            modelBuilder.Entity("SmartPhone.Models.Cart", b =>
                {
                    b.HasOne("SmartPhone.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartPhone.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SmartPhone.Models.Comment", b =>
                {
                    b.HasOne("SmartPhone.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartPhone.Models.File", b =>
                {
                    b.HasOne("SmartPhone.Models.Product", "Product")
                        .WithMany("Files")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartPhone.Models.Product", b =>
                {
                    b.HasOne("SmartPhone.Models.Color", "Color")
                        .WithMany("Products")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartPhone.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartPhone.Models.Status", "Status")
                        .WithMany("Products")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartPhone.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartPhone.Models.Vendor", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartPhone.Models.ProductCategory", b =>
                {
                    b.HasOne("SmartPhone.Models.Supplier")
                        .WithMany("ProductCategories")
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("SmartPhone.Models.User", b =>
                {
                    b.HasOne("SmartPhone.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
